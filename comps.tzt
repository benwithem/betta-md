// app/components/layout/Header.tsx
'use client';

import { 
  Group, 
  Burger, 
  UnstyledButton, 
  ThemeIcon, 
  Text,
  AppShell
} from '@mantine/core';
import { IconFish } from '@tabler/icons-react';
import Link from 'next/link';
import { UserMenu } from './UserMenu';
import { ThemeToggle } from '../ui/ThemeToggle';

interface HeaderProps {
  opened: boolean;
  toggle: () => void;
}

export function Header({ opened, toggle }: HeaderProps) {
  return (
    <AppShell.Header style={{
      background: 'linear-gradient(135deg, var(--mantine-color-blue-6) 0%, var(--mantine-color-cyan-6) 100%)',
      borderBottom: 'none'
    }}>
      <Group h="100%" px="md" justify="space-between">
        <Group>
          <Burger
            opened={opened}
            onClick={toggle}
            hiddenFrom="sm"
            size="sm"
            color="white"
          />
          <UnstyledButton component={Link} href="/">
            <Group>
              <ThemeIcon 
                size="lg" 
                variant="gradient" 
                gradient={{ from: 'blue', to: 'cyan' }}
                style={{ border: '2px solid white' }}
              >
                <IconFish size={20} />
              </ThemeIcon>
              <Text fw={700} size="lg" c="white">
                Betta-MD
              </Text>
            </Group>
          </UnstyledButton>
        </Group>

        <Group>
          <ThemeToggle />
          <UserMenu />
        </Group>
      </Group>
    </AppShell.Header>
  );
}
// app/components/layout/Navbar.tsx
'use client';

import { AppShell, NavLink, ThemeIcon } from '@mantine/core';
import { 
  IconHome, 
  IconChartBar, 
  IconDroplet, 
  IconFlask,
  IconSettings 
} from '@tabler/icons-react';
import Link from 'next/link';

interface NavbarProps {
  pathname: string;
}

export function Navbar({ pathname }: NavbarProps) {
  const links = [
    { 
      label: 'Dashboard', 
      icon: IconHome, 
      href: '/' 
    },
    { 
      label: 'Aquarium Tracker', 
      icon: IconChartBar, 
      href: '/aquarium' 
    },
    { 
      label: 'Maintenance', 
      icon: IconDroplet, 
      href: '/maintenance' 
    },
    { 
      label: 'Water Tests', 
      icon: IconFlask, 
      href: '/tests' 
    },
    { 
      label: 'Settings', 
      icon: IconSettings, 
      href: '/settings' 
    }
  ];

  return (
    <AppShell.Navbar p="md" style={{
      background: 'linear-gradient(180deg, var(--mantine-color-blue-0) 0%, white 100%)'
    }}>
      {links.map((link) => (
        <NavLink
          key={link.href}
          component={Link}
          href={link.href}
          label={link.label}
          leftSection={
            <ThemeIcon variant="light" size="sm">
              <link.icon size={16} />
            </ThemeIcon>
          }
          active={pathname === link.href}
        />
      ))}
    </AppShell.Navbar>
  );
}
// app/components/layout/MainLayout.tsx
'use client';

import { 
  AppShell, 
  NavLink, 
  Text, 
  Group, 
  UnstyledButton, 
  ThemeIcon,
  Box
} from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { IconHome, IconChartBar, IconFish } from '@tabler/icons-react';
import { usePathname } from 'next/navigation';
import { Header } from './Header';
import { Navbar } from './Navbar';
import { UserMenu } from './UserMenu';

type MainLayoutProps = {
  children: React.ReactNode;
};

export function MainLayout({ children }: MainLayoutProps) {
  const [opened, { toggle }] = useDisclosure();
  const pathname = usePathname();

  return (
    <AppShell
      header={{ height: 60 }}
      navbar={{ 
        width: 280,
        breakpoint: 'sm',
        collapsed: { mobile: !opened }
      }}
      padding="md"
    >
      <Header opened={opened} toggle={toggle} />
      <Navbar pathname={pathname} />
      
      <AppShell.Main style={{ 
        backgroundColor: 'var(--mantine-color-gray-0)',
        backgroundImage: 'radial-gradient(var(--mantine-color-blue-0) 1px, transparent 1px)',
        backgroundSize: '20px 20px'
      }}>
        <Box style={{ minHeight: '100vh' }}>
          {children}
        </Box>
      </AppShell.Main>
    </AppShell>
  );
}